<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 드라이브 로딩, connection 객체 받아 -->
	<!-- [1] dataSource 빈 선언 -->
	<!-- maven-repository:spring-jdbc 스프링 버전과 동일한 걸로 넣어야함 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<!-- DriverManagerDataSource에는 setter로 설정되어 있기 때문에 반드시 property로 넣어야함. -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="1234" />
	</bean>
	
	<!-- [2] JdbcTemplate 빈 선언 -->
	<!-- 쿼리문을 실행할 메소드가 JdbcTemplate 에서 제공된다.(execute, update....) -->
	<!-- C:\Users\defec\.m2\repository\org\springframework\spring-core\5.1.3.RELEASE에 jar 파일에 JdbcTemplate 클래스가 있음. --> 
	<!-- => 스프링자체에서 제공하는 JdbcTemplate 클래스 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
		<!-- dataSource 빈을 넣어줘야함 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- [3] MemDaoImp 빈 선언 : JdbcTemplate을 실제적으로 사용하는 부분 -->
	<!-- <bean class="com.defectio.spring.spring_04_jdbc.sec01_template.MemDaoImp"> : 참조하는 부분이 없을때는 id값이 없어도 된다.-->
	<bean id="dao" class="com.defectio.spring.spring_04_jdbc.sec01_template.MemDaoImp">
		<!-- MemDaoImp에 jdbcTemplate 이라는 멤버변수 & 멤버변수로 구현한 setter가 반드시 존재 해야 한다. -->
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	
</beans>
